name: SPFx CI/CD Pipeline

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: 🧾 Checkout Code
        uses: actions/checkout@v2

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18.18.1"

      - name: 📦 Install Dependencies
        run: npm install

      - name: 🛠 Install Gulp
        run: npm install gulp gulp-cli

      - name: 🛠️ Bundle SPFx Code
        run: gulp bundle --ship

      - name: 📦 Package SPFx Solution
        run: gulp package-solution --ship

      - name: 💾 Upload SPPKG Artifact
        uses: actions/upload-artifact@v4
        with:
          name: spfx-package
          path: sharepoint/solution/advanced-comments-box.sppkg

  deploy:
    runs-on: windows-latest # Use Windows for PowerShell compatibility
    needs: build

    steps:
      - name: 🧾 Checkout Code
        uses: actions/checkout@v2

      - name: 📥 Download SharePoint Package
        uses: actions/download-artifact@v4
        with:
          name: spfx-package
          path: sharepoint/solution/

      - name: 🧰 Install PnP PowerShell
        shell: pwsh
        run: |
          Install-Module -Name PnP.PowerShell -Force -AllowClobber -Scope CurrentUser

      - name: 🚀 Deploy SPFx App to App Catalog (PowerShell)
        shell: pwsh
        env:
          ADMIN_USERNAME: ${{ secrets.ADMIN_USERNAME }}
          ADMIN_PASSWORD: ${{ secrets.ADMIN_PASSWORD }}
          SPO_SITE_URL: ${{ secrets.SPO_SITE_URL }}
        run: |
          $secpass = ConvertTo-SecureString $env:ADMIN_PASSWORD -AsPlainText -Force
          $creds = New-Object System.Management.Automation.PSCredential($env:ADMIN_USERNAME, $secpass)

          Connect-PnPOnline -Url $env:SPO_SITE_URL -Credentials $creds

          $appName = "advanced-comments-box"
          $package = Get-ChildItem "sharepoint/solution/*.sppkg" | Select-Object -First 1
          $existingApp = Get-PnPApp | Where-Object { $_.Title -eq $appName }

          if ($existingApp -and $existingApp.Deployed) {
            Write-Host "✅ App is already deployed. Skipping."
            return
          }

          Write-Host "📦 Uploading and deploying app..."
          Add-PnPApp -Path $package.FullName -Scope Tenant -Publish -Overwrite
