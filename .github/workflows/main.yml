name: SPFx CI/CD Pipeline

on:
  push:
    branches:
      - master # or 'main' if your repo uses that

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: üßæ Checkout Code
        uses: actions/checkout@v2

      - name: üîß Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18.18.1"

      - name: üì¶ Install Dependencies
        run: npm install

      - name: üõ† Install Gulp
        run: npm install gulp gulp-cli

      - name: üõ†Ô∏è Bundle SPFx Code
        run: gulp bundle --ship

      - name: üì¶ Package SPFx Solution
        run: gulp package-solution --ship

      - name: üíæ Upload SPPKG Artifact
        uses: actions/upload-artifact@v4
        with:
          name: spfx-package
          path: sharepoint/solution/advanced-comments-box.sppkg

  deploy:
    runs-on: windows-latest
    needs: build

    steps:
      - name: üßæ Checkout Code
        uses: actions/checkout@v2

      - name: üì• Download SharePoint Package
        uses: actions/download-artifact@v4
        with:
          name: spfx-package
          path: sharepoint/solution/

      - name: üöÄ Deploy SPFx App (Cert Auth)
        shell: pwsh
        env:
          SPO_SITE_URL: ${{ secrets.SPO_SITE_URL }}
          CLIENT_ID:   ${{ secrets.CLIENT_ID }}
          TENANT_ID:   ${{ secrets.TENANT_ID }}
          PFX_BASE64:  ${{ secrets.PFX_BASE64 }}
          PFX_PASSWORD: ${{ secrets.PFX_PASSWORD }}
        run: |
          # write the cert to disk
          [IO.File]::WriteAllBytes("$env:RUNNER_TEMP\spfx-deployer.pfx", [Convert]::FromBase64String($env:PFX_BASE64))
          $securePwd = ConvertTo-SecureString $env:PFX_PASSWORD -AsPlainText -Force

          Connect-PnPOnline `
            -Url $env:SPO_SITE_URL `
            -ClientId $env:CLIENT_ID `
            -Tenant $env:TENANT_ID `
            -CertificatePath "$env:RUNNER_TEMP\spfx-deployer.pfx" `
            -CertificatePassword $securePwd

          # now you can safely call Get/Publish/Add PnPApp
          $app = Get-PnPApp | Where-Object Title -EQ "advanced-comments-box"
          if ($app.Deployed) { Write-Host "Already deployed" } 
          else { Add-PnPApp -Path (Get-ChildItem sharepoint/solution/*.sppkg).FullName -Scope Tenant -Publish -Overwrite }
