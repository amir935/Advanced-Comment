name: SPFx CI/CD Pipeline

on:
  push:
    branches:
      - master  # or 'main' if that's your default branch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: 🧾 Checkout Code
        uses: actions/checkout@v2

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.18.1'

      - name: 📦 Install Dependencies
        run: npm install

      - name: 🛠 Install Gulp
        run: npm install gulp gulp-cli

      - name: 🛠️ Bundle SPFx Code
        run: gulp bundle --ship

      - name: 📦 Package SPFx Solution
        run: gulp package-solution --ship

      - name: 💾 Upload SPPKG Artifact
        uses: actions/upload-artifact@v4
        with:
          name: spfx-package
          path: sharepoint/solution/advanced-comments-box.sppkg

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: 🧾 Checkout Code
        uses: actions/checkout@v2

      - name: 📥 Download SharePoint Package
        uses: actions/download-artifact@v4
        with:
          name: spfx-package
          path: sharepoint/solution/

      - name: 🔧 Install Microsoft 365 CLI
        run: npm install -g @pnp/cli-microsoft365

      - name: 🧰 Setup CLI Default App ID
        run: m365 setup --appId 00000003-0000-0ff1-ce00-000000000000

      - name: 🔐 M365 Login (Manual)
        run: m365 login --authType password --userName "${{ secrets.ADMIN_USERNAME }}" --password "${{ secrets.ADMIN_PASSWORD }}"

      - name: 🚀 Deploy SPFx App to App Catalog (only if not deployed)
        shell: bash
        run: |
          APP_NAME="advanced-comments-box.sppkg"
          FILE_PATH="sharepoint/solution/$APP_NAME"
          APP_CATALOG_URL="${{ secrets.SPO_SITE_URL }}"

          echo "🔍 Checking if app already deployed..."
          DEPLOYED=$(m365 spo app list --appCatalogUrl "$APP_CATALOG_URL" --output json | jq -r --arg APP "$APP_NAME" '.[] | select(.Title==$APP) | .Deployed')

          if [ "$DEPLOYED" == "true" ]; then
            echo "✅ App is already deployed. Skipping."
            exit 0
          fi

          echo "📦 Uploading app..."
          m365 spo app add --filePath "$FILE_PATH" --appCatalogUrl "$APP_CATALOG_URL" --overwrite

          APP_ID=$(m365 spo app get --name "$APP_NAME" --appCatalogUrl "$APP_CATALOG_URL" --output json | jq -r ".UniqueId")

          echo "🚀 Deploying app with ID: $APP_ID"
          m365 spo app deploy --id "$APP_ID" --appCatalogUrl "$APP_CATALOG_URL" --skipFeatureDeployment
